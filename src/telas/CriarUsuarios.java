/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import Utilitarios.ModeloTabela;
import Utilitarios.conectaBanco;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author Italo O
 */
public class CriarUsuarios extends javax.swing.JFrame {

    conectaBanco conecta= new conectaBanco();
    SimpleDateFormat DateFormat = new SimpleDateFormat("dd-MM-yyyy");
    ArrayList dados=new ArrayList();
    String[] Colunas=new String[]{"NOME","TELEFONE","CPF","CIDADE","BAIRRO","RUA","NUMERO"};

    public CriarUsuarios() {
        initComponents();
        conecta.conexao();
        preencherJComboBoxEspecialidade();
        preencherTabelaAdm();
        preencherTabelaSecretaria();
        preencherTabelaProfissional();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldAdm = new javax.swing.JTextField();
        jTextFieldSecretaria = new javax.swing.JTextField();
        jTextFieldProfissional = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonCadastrarAdm = new javax.swing.JButton();
        jButtonCadastrarSecretaria = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButtonCadastrarProfissional = new javax.swing.JButton();
        jPasswordFieldAdm = new javax.swing.JPasswordField();
        jPasswordFieldSecretaria = new javax.swing.JPasswordField();
        jPasswordFieldProfissional = new javax.swing.JPasswordField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldEspecialidade = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAdm = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSecretaria = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableProfissional = new javax.swing.JTable();
        jButtonEditarAdm = new javax.swing.JButton();
        jButtonExcluirAdm = new javax.swing.JButton();
        jButtonExcluirSecretaria = new javax.swing.JButton();
        jButtonEditarSecretaria = new javax.swing.JButton();
        jButtonExcluirProfissional = new javax.swing.JButton();
        jButtonEditarProfissional = new javax.swing.JButton();
        jTextFieldNumInscricaoSecretaria = new javax.swing.JTextField();
        jTextFieldNumInscricaoProfissioanl = new javax.swing.JTextField();
        jTextFieldNumInscricaoAdm = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CRIAR USUÁRIOS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("ADMINISTRADOR:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("SECRETÁRIA:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("PROFISSIONAL:");

        jTextFieldAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAdmActionPerformed(evt);
            }
        });

        jButtonCadastrarAdm.setText("CADASTRAR");
        jButtonCadastrarAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarAdmActionPerformed(evt);
            }
        });

        jButtonCadastrarSecretaria.setText("CADASTRAR");
        jButtonCadastrarSecretaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarSecretariaActionPerformed(evt);
            }
        });

        jButtonCadastrarProfissional.setText("CADASTRAR");
        jButtonCadastrarProfissional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarProfissionalActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextFieldEspecialidade.setEnabled(false);

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Nome:");

        jLabel6.setText("Senha:");

        jLabel7.setText("Nome:");

        jLabel8.setText("Senha:");

        jLabel9.setText("Especialidade:");

        jLabel10.setText("Profissional:");

        jLabel11.setText("Senha:");

        jTableAdm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAdm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAdmMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAdm);

        jTabbedPane1.addTab("ADMINISTRADOR", jScrollPane1);

        jTableSecretaria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableSecretaria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSecretariaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableSecretaria);

        jTabbedPane1.addTab("SECRETÁRIA", jScrollPane2);

        jTableProfissional.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableProfissional.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProfissionalMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableProfissional);

        jTabbedPane1.addTab("PROFISSIONAL", jScrollPane3);

        jButtonEditarAdm.setText("EDITAR");
        jButtonEditarAdm.setEnabled(false);
        jButtonEditarAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarAdmActionPerformed(evt);
            }
        });

        jButtonExcluirAdm.setText("EXCLUIR");
        jButtonExcluirAdm.setEnabled(false);
        jButtonExcluirAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirAdmActionPerformed(evt);
            }
        });

        jButtonExcluirSecretaria.setText("EXCLUIR");
        jButtonExcluirSecretaria.setEnabled(false);
        jButtonExcluirSecretaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirSecretariaActionPerformed(evt);
            }
        });

        jButtonEditarSecretaria.setText("EDITAR");
        jButtonEditarSecretaria.setEnabled(false);
        jButtonEditarSecretaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarSecretariaActionPerformed(evt);
            }
        });

        jButtonExcluirProfissional.setText("EXCLUIR");
        jButtonExcluirProfissional.setEnabled(false);
        jButtonExcluirProfissional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirProfissionalActionPerformed(evt);
            }
        });

        jButtonEditarProfissional.setText("EDITAR");
        jButtonEditarProfissional.setEnabled(false);
        jButtonEditarProfissional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarProfissionalActionPerformed(evt);
            }
        });

        jTextFieldNumInscricaoSecretaria.setEnabled(false);

        jTextFieldNumInscricaoProfissioanl.setEnabled(false);

        jTextFieldNumInscricaoAdm.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(245, 245, 245))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordFieldAdm)
                            .addComponent(jTextFieldAdm)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldSecretaria)
                            .addComponent(jPasswordFieldSecretaria)))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldNumInscricaoProfissioanl, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExcluirProfissional)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEditarProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCadastrarProfissional))
                            .addComponent(jPasswordFieldProfissional, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldProfissional, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldEspecialidade, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextFieldNumInscricaoAdm, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExcluirAdm)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEditarAdm, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCadastrarAdm))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextFieldNumInscricaoSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExcluirSecretaria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEditarSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCadastrarSecretaria)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAdm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jPasswordFieldAdm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCadastrarAdm)
                    .addComponent(jButtonEditarAdm)
                    .addComponent(jButtonExcluirAdm)
                    .addComponent(jTextFieldNumInscricaoAdm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPasswordFieldSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCadastrarSecretaria)
                    .addComponent(jButtonEditarSecretaria)
                    .addComponent(jButtonExcluirSecretaria)
                    .addComponent(jTextFieldNumInscricaoSecretaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel9))
                .addGap(3, 3, 3)
                .addComponent(jTextFieldEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordFieldProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCadastrarProfissional)
                    .addComponent(jButtonEditarProfissional)
                    .addComponent(jButtonExcluirProfissional)
                    .addComponent(jTextFieldNumInscricaoProfissioanl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCadastrarAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarAdmActionPerformed
        // TODO add your handling code here:
        if(jTextFieldAdm.getText().isEmpty()||jPasswordFieldAdm.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatórios!");
        }
        else{
        try {
            PreparedStatement pst = conecta.conn.prepareStatement("insert into usuarioadministrador(NOME,SENHA) Values(?,?)");
            pst.setString(1, jTextFieldAdm.getText());
            pst.setString(2, String.valueOf(jPasswordFieldAdm.getPassword()));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Usuário cadastrado com sucesso!");
            jTextFieldAdm.setText("");
            jPasswordFieldAdm.setText("");
            preencherTabelaAdm();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao cadastrar");
        }
        }
    }//GEN-LAST:event_jButtonCadastrarAdmActionPerformed

    private void jButtonCadastrarProfissionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarProfissionalActionPerformed
        // TODO add your handling code here:
        if(jTextFieldProfissional.getText().isEmpty()||jPasswordFieldProfissional.getText().isEmpty()
                ||(jComboBox1.getSelectedItem().equals("Todas as especialidades")&&(jTextFieldEspecialidade.getText().isEmpty()))){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatórios!");
        }
        else{
        try {
            PreparedStatement pst = conecta.conn.prepareStatement("insert into usuarioprofissional(ESPECIALIDADE,NOME,SENHA) Values(?,?,?)");
            if(jComboBox1.getSelectedItem().equals("Todas as especialidades")){
                pst.setString(1, jTextFieldEspecialidade.getText());
            }
            else{
                pst.setString(1, (String) jComboBox1.getSelectedItem());
            }
            pst.setString(2, jTextFieldProfissional.getText());
            pst.setString(3, String.valueOf(jPasswordFieldProfissional.getPassword()));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Usuário cadastrado com sucesso!");
            jTextFieldEspecialidade.setText("");
            jTextFieldEspecialidade.setEnabled(false);
            jTextFieldProfissional.setText("");
            jPasswordFieldProfissional.setText("");
            preencherJComboBoxEspecialidade();
            preencherTabelaProfissional();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao cadastrar");
        }
        }
    }//GEN-LAST:event_jButtonCadastrarProfissionalActionPerformed

    private void jButtonCadastrarSecretariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarSecretariaActionPerformed
        // TODO add your handling code here:
        if(jTextFieldSecretaria.getText().isEmpty()||jPasswordFieldSecretaria.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatórios!");
        }
        else{
        try {
            PreparedStatement pst = conecta.conn.prepareStatement("insert into usuariosecretaria(NOME,SENHA) Values(?,?)");
            pst.setString(1, jTextFieldSecretaria.getText());
            pst.setString(2, String.valueOf(jPasswordFieldSecretaria.getPassword()));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Usuário cadastrado com sucesso!");
            jTextFieldSecretaria.setText("");
            jPasswordFieldSecretaria.setText("");
            preencherTabelaSecretaria();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao cadastrar");
        }
        }
    }//GEN-LAST:event_jButtonCadastrarSecretariaActionPerformed

    private void jTextFieldAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAdmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAdmActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTextFieldEspecialidade.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTableAdmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAdmMouseClicked
        // TODO add your handling code here:
        ModeloTabela ModeloTabela=new ModeloTabela(dados,Colunas);
        jTableAdm.getModel();
        int index = jTableAdm.getSelectedRow();
                
        String numeroDeInscricao=""+jTableAdm.getValueAt(jTableAdm.getSelectedRow(), 0);
        jTextFieldNumInscricaoAdm.setText(numeroDeInscricao);
        String NOME=""+jTableAdm.getValueAt(jTableAdm.getSelectedRow(), 1);
        jTextFieldAdm.setText(NOME);
        jButtonCadastrarAdm.setEnabled(false);
        jButtonEditarAdm.setEnabled(true);
        jButtonExcluirAdm.setEnabled(true);
    }//GEN-LAST:event_jTableAdmMouseClicked

    private void jTableSecretariaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSecretariaMouseClicked
        // TODO add your handling code here:
        ModeloTabela ModeloTabela=new ModeloTabela(dados,Colunas);
        jTableSecretaria.getModel();
        int index = jTableSecretaria.getSelectedRow();
                
        String numeroDeInscricao=""+jTableSecretaria.getValueAt(jTableSecretaria.getSelectedRow(), 0);
        jTextFieldNumInscricaoSecretaria.setText(numeroDeInscricao);
        String NOME=""+jTableSecretaria.getValueAt(jTableSecretaria.getSelectedRow(), 1);
        jTextFieldSecretaria.setText(NOME);
        jButtonCadastrarSecretaria.setEnabled(false);
        jButtonEditarSecretaria.setEnabled(true);
        jButtonExcluirSecretaria.setEnabled(true);
    }//GEN-LAST:event_jTableSecretariaMouseClicked

    private void jTableProfissionalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProfissionalMouseClicked
        // TODO add your handling code here:
        ModeloTabela ModeloTabela=new ModeloTabela(dados,Colunas);
        jTableProfissional.getModel();
        int index = jTableProfissional.getSelectedRow();
        
        
        String numeroDeInscricao=""+jTableProfissional.getValueAt(jTableProfissional.getSelectedRow(), 0);
        jTextFieldNumInscricaoProfissioanl.setText(numeroDeInscricao);
        String especialidade=""+jTableProfissional.getValueAt(jTableProfissional.getSelectedRow(), 1);
        jTextFieldEspecialidade.setText(especialidade);
        String NOME=""+jTableProfissional.getValueAt(jTableProfissional.getSelectedRow(), 2);
        jTextFieldProfissional.setText(NOME);
        jTextFieldEspecialidade.setEnabled(true);
        jButtonCadastrarProfissional.setEnabled(false);
        jButtonEditarProfissional.setEnabled(true);
        jButtonExcluirProfissional.setEnabled(true);
    }//GEN-LAST:event_jTableProfissionalMouseClicked

    private void jButtonExcluirAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirAdmActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from usuarioadministrador where numeroDeInscricao='"+jTextFieldNumInscricaoAdm.getText()+"'");
        JOptionPane.showMessageDialog(rootPane, "Usuário excluido com sucesso!");
        preencherTabelaAdm();
        jTextFieldAdm.setText("");
        jPasswordFieldAdm.setText("");
        jButtonCadastrarAdm.setEnabled(true);
        jButtonEditarAdm.setEnabled(false);
        jButtonExcluirAdm.setEnabled(false);
    }//GEN-LAST:event_jButtonExcluirAdmActionPerformed

    private void jButtonEditarAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarAdmActionPerformed
        // TODO add your handling code here:
        if((jTextFieldAdm.getText().isEmpty())||(jPasswordFieldAdm.getText().isEmpty())){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatorios!");
        }
        else{    
            try {
            PreparedStatement pst=conecta.conn.prepareStatement("update usuarioadministrador set NOME=?,SENHA=? where numeroDeInscricao=?");
            pst.setString(1,jTextFieldAdm.getText());
            pst.setString(2, String.valueOf(jPasswordFieldAdm.getPassword()));
            pst.setString(3,jTextFieldNumInscricaoAdm.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Dados do usuário editado com sucesso!");
            preencherTabelaAdm();
            jButtonCadastrarAdm.setEnabled(true);
            jButtonEditarAdm.setEnabled(false);
            jButtonExcluirAdm.setEnabled(false);
            jTextFieldAdm.setText("");
            jPasswordFieldAdm.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro ao editar\n Erro:"+ex);
            }   
        }
    }//GEN-LAST:event_jButtonEditarAdmActionPerformed

    private void jButtonExcluirSecretariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirSecretariaActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from usuariosecretaria where numeroDeInscricao='"+jTextFieldNumInscricaoSecretaria.getText()+"'");
        JOptionPane.showMessageDialog(rootPane, "Usuário excluido com sucesso!");
        preencherTabelaSecretaria();
        jTextFieldSecretaria.setText("");
        jPasswordFieldSecretaria.setText("");
        jButtonCadastrarSecretaria.setEnabled(true);
        jButtonEditarSecretaria.setEnabled(false);
        jButtonExcluirSecretaria.setEnabled(false);
    }//GEN-LAST:event_jButtonExcluirSecretariaActionPerformed

    private void jButtonExcluirProfissionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirProfissionalActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from usuarioprofissional where numeroDeInscricao='"+jTextFieldNumInscricaoProfissioanl.getText()+"'");
        JOptionPane.showMessageDialog(rootPane, "Usuário excluido com sucesso!");
        preencherTabelaProfissional();
        jTextFieldEspecialidade.setText("");
        jTextFieldEspecialidade.setEnabled(false);
        jTextFieldProfissional.setText("");
        jPasswordFieldProfissional.setText("");
        jButtonCadastrarProfissional.setEnabled(true);
        jButtonEditarProfissional.setEnabled(false);
        jButtonExcluirProfissional.setEnabled(false);
    }//GEN-LAST:event_jButtonExcluirProfissionalActionPerformed

    private void jButtonEditarSecretariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarSecretariaActionPerformed
        // TODO add your handling code here:
        if((jTextFieldSecretaria.getText().isEmpty())||(jPasswordFieldSecretaria.getText().isEmpty())){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatorios!");
        }
        else{    
            try {
            PreparedStatement pst=conecta.conn.prepareStatement("update usuariosecretaria set NOME=?,SENHA=? where numeroDeInscricao=?");
            pst.setString(1,jTextFieldSecretaria.getText());
            pst.setString(2, String.valueOf(jPasswordFieldSecretaria.getPassword()));
            pst.setString(3,jTextFieldNumInscricaoSecretaria.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Dados do usuário editado com sucesso!");
            preencherTabelaSecretaria();
            jButtonCadastrarSecretaria.setEnabled(true);
            jButtonEditarSecretaria.setEnabled(false);
            jButtonExcluirSecretaria.setEnabled(false);
            jTextFieldSecretaria.setText("");
            jPasswordFieldSecretaria.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro ao editar\n Erro:"+ex);
            }   
        }
    }//GEN-LAST:event_jButtonEditarSecretariaActionPerformed

    private void jButtonEditarProfissionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarProfissionalActionPerformed
        // TODO add your handling code here:
        if((jTextFieldProfissional.getText().isEmpty())||(jPasswordFieldProfissional.getText().isEmpty())){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatorios!");
        }
        else{    
            try {
            PreparedStatement pst=conecta.conn.prepareStatement("update usuarioprofissional set ESPECIALIDADE=?,NOME=?,SENHA=? where numeroDeInscricao=?");
            pst.setString(1,jTextFieldEspecialidade.getText());
            pst.setString(2,jTextFieldProfissional.getText());
            pst.setString(3, String.valueOf(jPasswordFieldProfissional.getPassword()));
            pst.setString(4,jTextFieldNumInscricaoProfissioanl.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Dados do usuário editado com sucesso!");
            preencherTabelaProfissional();
            preencherJComboBoxEspecialidade();
            jButtonCadastrarProfissional.setEnabled(true);
            jButtonEditarProfissional.setEnabled(false);
            jButtonExcluirProfissional.setEnabled(false);
            jTextFieldEspecialidade.setText("");
            jTextFieldEspecialidade.setEnabled(false);
            jTextFieldProfissional.setText("");
            jPasswordFieldProfissional.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro ao editar\n Erro:"+ex);
            }   
        }
    }//GEN-LAST:event_jButtonEditarProfissionalActionPerformed
    public void preencherColunasAdm(String SQL){
        ArrayList dadosDoDia=new ArrayList();
        String[] ColunasDoDia=new String[]{"Nº de inscrição","Nome","Senha"};
        conecta.executaSQL(SQL);
        try {
            conecta.rs.first();
            do{
            dadosDoDia.add(new Object[]{conecta.rs.getInt("numeroDeInscricao"),conecta.rs.getString("Nome"),conecta.rs.getString("Senha")});
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher a tabela ou tabela vazia (ArrayList)!\n Erro:"+ex);
        }
        ModeloTabela ModeloTabela=new ModeloTabela(dadosDoDia,ColunasDoDia);
        jTableAdm.setModel(ModeloTabela);
    }
    public void preencherColunasSecretaria(String SQL){
        ArrayList dadosDoDia=new ArrayList();
        String[] ColunasDoDia=new String[]{"Nº de inscrição","Nome","Senha"};
        conecta.executaSQL(SQL);
        try {
            conecta.rs.first();
            do{
            dadosDoDia.add(new Object[]{conecta.rs.getInt("numeroDeInscricao"),conecta.rs.getString("Nome"),conecta.rs.getString("Senha")});
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher a tabela ou tabela vazia (ArrayList)!\n Erro:"+ex);
        }
        ModeloTabela ModeloTabela=new ModeloTabela(dadosDoDia,ColunasDoDia);
        jTableSecretaria.setModel(ModeloTabela);
    }
    public void preencherColunasProfissional(String SQL){
        ArrayList dadosDoDia=new ArrayList();
        String[] ColunasDoDia=new String[]{"Nº de inscrição","Especialidade","Nome","Senha"};
        conecta.executaSQL(SQL);
        try {
            conecta.rs.first();
            do{
            dadosDoDia.add(new Object[]{conecta.rs.getInt("numeroDeInscricao"),conecta.rs.getString("ESPECIALIDADE"),conecta.rs.getString("Nome"),
                conecta.rs.getString("Senha")});
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher a tabela ou tabela vazia (ArrayList)!\n Erro:"+ex);
        }
        ModeloTabela ModeloTabela=new ModeloTabela(dadosDoDia,ColunasDoDia);
        jTableProfissional.setModel(ModeloTabela);
    }
    public void preencherTabelaAdm(){
        preencherColunasAdm("select * from usuarioadministrador");           
    }
    public void preencherTabelaSecretaria(){
        preencherColunasSecretaria("select * from usuariosecretaria");           
    }
    public void preencherTabelaProfissional(){
        preencherColunasProfissional("select * from usuarioprofissional");           
    }
    public void preencherJComboBoxEspecialidade(){
        conecta.conexao();
        conecta.executaSQL("select distinct ESPECIALIDADE from usuarioprofissional order by ESPECIALIDADE");
        try {
            conecta.rs.first();
            jComboBox1.removeAllItems();
            jComboBox1.addItem("Todas as especialidades");
            do{
                if(!conecta.rs.getString("ESPECIALIDADE").isEmpty()){
                    jComboBox1.addItem(conecta.rs.getString("ESPECIALIDADE"));
                }
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(rootPane,"Erro ao preencher JComboBox!\n Erro:"+ ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CriarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CriarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CriarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CriarUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CriarUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCadastrarAdm;
    private javax.swing.JButton jButtonCadastrarProfissional;
    private javax.swing.JButton jButtonCadastrarSecretaria;
    private javax.swing.JButton jButtonEditarAdm;
    private javax.swing.JButton jButtonEditarProfissional;
    private javax.swing.JButton jButtonEditarSecretaria;
    private javax.swing.JButton jButtonExcluirAdm;
    private javax.swing.JButton jButtonExcluirProfissional;
    private javax.swing.JButton jButtonExcluirSecretaria;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordFieldAdm;
    private javax.swing.JPasswordField jPasswordFieldProfissional;
    private javax.swing.JPasswordField jPasswordFieldSecretaria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableAdm;
    private javax.swing.JTable jTableProfissional;
    private javax.swing.JTable jTableSecretaria;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextFieldAdm;
    private javax.swing.JTextField jTextFieldEspecialidade;
    private javax.swing.JTextField jTextFieldNumInscricaoAdm;
    private javax.swing.JTextField jTextFieldNumInscricaoProfissioanl;
    private javax.swing.JTextField jTextFieldNumInscricaoSecretaria;
    private javax.swing.JTextField jTextFieldProfissional;
    private javax.swing.JTextField jTextFieldSecretaria;
    // End of variables declaration//GEN-END:variables
}
