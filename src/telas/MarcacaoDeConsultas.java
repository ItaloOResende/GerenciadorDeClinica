/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import Utilitarios.conectaBanco;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import Utilitarios.ModeloTabela;
import Utilitarios.conectaBanco;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
/**
 *
 * @author Italo O
 */
public class MarcacaoDeConsultas extends javax.swing.JFrame {

    conectaBanco conecta= new conectaBanco();
    ArrayList dados=new ArrayList();
    String[] Colunas=new String[]{"NOME","TELEFONE","CPF","CIDADE","BAIRRO","RUA","NUMERO"};
    SimpleDateFormat DateFormat = new SimpleDateFormat("dd-MM-yyyy");
    SimpleDateFormat DateFormatHorario = new SimpleDateFormat("HH:mm");
    
    public MarcacaoDeConsultas() {
        initComponents();
        conecta.conexao();
        preencherTabelaPaciente();
        preencherTabelaConsulta();
        DefinirJSpinner();
        preencherJComboBoxEspecialidade();
        preencherJComboBoxProfissional();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCidade = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldNumero = new javax.swing.JTextField();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldBairro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldRua = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePacientes = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxEspecialidade = new javax.swing.JComboBox<>();
        jButtonConfirmar = new javax.swing.JButton();
        jButtonPesquisarConsulta = new javax.swing.JButton();
        jButtonDesmarcar = new javax.swing.JButton();
        jButtonCadastrar = new javax.swing.JButton();
        jButtonEditarPaciente = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonPesquisarPaciente = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableConsultas = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxProfissional = new javax.swing.JComboBox<>();
        jTextFieldNumInscricao = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButtonEditarConsulta = new javax.swing.JButton();
        jTextFieldOrdem = new javax.swing.JTextField();
        jSpinner1 = new javax.swing.JSpinner();
        jTextFieldTelefone = new javax.swing.JFormattedTextField();
        jTextFieldCPF = new javax.swing.JFormattedTextField();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Telefone:");

        jTextFieldCidade.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Número:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Cidade:");

        jTextFieldNumero.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jTextFieldNome.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Bairro:");

        jTextFieldBairro.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MARCAÇÃO DE CONSULTAS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Nome:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Rua:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("CPF:");

        jTextFieldRua.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jTablePacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablePacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePacientes);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Especialidade:");

        jComboBoxEspecialidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButtonConfirmar.setText("CONFIRMAR");
        jButtonConfirmar.setEnabled(false);
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });

        jButtonPesquisarConsulta.setText("PESQUISAR");
        jButtonPesquisarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarConsultaActionPerformed(evt);
            }
        });

        jButtonDesmarcar.setText("DESMARCAR");
        jButtonDesmarcar.setEnabled(false);
        jButtonDesmarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDesmarcarActionPerformed(evt);
            }
        });

        jButtonCadastrar.setText("CADASTRAR");
        jButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarActionPerformed(evt);
            }
        });

        jButtonEditarPaciente.setText("EDITAR");
        jButtonEditarPaciente.setEnabled(false);
        jButtonEditarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarPacienteActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("EXCLUIR");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonPesquisarPaciente.setText("PESQUISAR");
        jButtonPesquisarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarPacienteActionPerformed(evt);
            }
        });

        jTableConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableConsultasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableConsultas);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Dia:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Horário:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Profissional");

        jComboBoxProfissional.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextFieldNumInscricao.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        jTextFieldNumInscricao.setEnabled(false);

        jButtonEditarConsulta.setText("EDITAR");
        jButtonEditarConsulta.setEnabled(false);
        jButtonEditarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarConsultaActionPerformed(evt);
            }
        });

        jTextFieldOrdem.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        jTextFieldOrdem.setEnabled(false);

        try {
            jTextFieldTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextFieldTelefone.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        try {
            jTextFieldCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextFieldCPF.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNome)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jButtonCadastrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEditarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNumInscricao, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                    .addComponent(jTextFieldCidade))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldBairro)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldRua)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldNumero)))
                            .addComponent(jButtonPesquisarPaciente, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jButtonConfirmar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEditarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDesmarcar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxEspecialidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxProfissional, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonPesquisarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSpinner1)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(jTextFieldTelefone)
                    .addComponent(jTextFieldCPF))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(jTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(1, 1, 1)
                .addComponent(jTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonEditarPaciente)
                                .addComponent(jButtonExcluir)
                                .addComponent(jButtonPesquisarPaciente)
                                .addComponent(jTextFieldNumInscricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel15)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBoxEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBoxProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSpinner1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConfirmar)
                    .addComponent(jButtonDesmarcar)
                    .addComponent(jButtonPesquisarConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEditarConsulta)
                    .addComponent(jTextFieldOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPesquisarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarConsultaActionPerformed
        // TODO add your handling code here:
        if((jComboBoxEspecialidade.getSelectedItem().equals("Todas as especialidades"))
           ||(jComboBoxProfissional.getSelectedItem().equals("Todas os profissionais"))
           ||(jDateChooser1.getDate()==null)){
            preencherTabelaConsulta();
        }
        else{
            preencherTabelaConsultaPesquisar();
        }

    }//GEN-LAST:event_jButtonPesquisarConsultaActionPerformed

    private void jButtonDesmarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDesmarcarActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from marcacaodeconsultas where ORDEM='"+jTextFieldOrdem.getText()+"'");
        conecta.executaSQLExcluir("delete from relatoriomedico where ORDEM='"+jTextFieldOrdem.getText()+"'");
        JOptionPane.showMessageDialog(rootPane,"Consulta desmarcada com sucesso!");
        
        jTextFieldNome.setEnabled(true);
        jTextFieldCPF.setEnabled(true);
        jTextFieldTelefone.setEnabled(true);
        jTextFieldCidade.setEnabled(true);
        jTextFieldBairro.setEnabled(true);
        jTextFieldRua.setEnabled(true);
        jTextFieldNumero.setEnabled(true);
            
        EsvaziarCamposDeTexto();
        jButtonCadastrar.setEnabled(true);
        jButtonEditarPaciente.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonConfirmar.setEnabled(false);
        jButtonEditarConsulta.setEnabled(false);
        jButtonDesmarcar.setEnabled(false);
        preencherTabelaConsulta(); 
    }//GEN-LAST:event_jButtonDesmarcarActionPerformed

    private void jButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarActionPerformed
        // TODO add your handling code here:
        if(!jTextFieldNome.getText().isEmpty()&&!jTextFieldTelefone.getText().isEmpty()&&!jTextFieldCPF.getText().isEmpty()
            &&!jTextFieldCidade.getText().isEmpty()&&!jTextFieldBairro.getText().isEmpty()
            &&!jTextFieldRua.getText().isEmpty()&&!jTextFieldNumero.getText().isEmpty()){
            try {
            //cadastrar na tabela de alunos
            PreparedStatement pst=conecta.conn.prepareStatement("insert into FICHADEPACIENTE(NOME,TELEFONE,CPF,CIDADE,BAIRRO,RUA,NUMERO) "
                    + "Values(?,?,?,?,?,?,?)");
            pst.setString(1,jTextFieldNome.getText());
            pst.setString(2,jTextFieldTelefone.getText());
            pst.setString(3,jTextFieldCPF.getText());
            pst.setString(4,jTextFieldCidade.getText());
            pst.setString(5,jTextFieldBairro.getText());
            pst.setString(6,jTextFieldRua.getText());
            pst.setString(7,jTextFieldNumero.getText());
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Paciente cadastrado com sucesso!");
            EsvaziarCamposDeTexto();
            preencherTabelaPaciente();
            } catch (NullPointerException | SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro na inserção!\n Erro:"+ex);    
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatorios!");
        }
    }//GEN-LAST:event_jButtonCadastrarActionPerformed

    private void jButtonEditarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarPacienteActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat DateFormat = new SimpleDateFormat("dd-MM-yyyy");
        if((jTextFieldNome.getText().isEmpty())||(jTextFieldTelefone.getText().isEmpty())||(jTextFieldCPF.getText().isEmpty()) 
            ||(jTextFieldCidade.getText().isEmpty())||(jTextFieldBairro.getText().isEmpty())||(jTextFieldRua.getText().isEmpty())
            ||(jTextFieldNumero.getText().isEmpty())){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos obrigatorios!");
        }
        else{    
            try {
            PreparedStatement pst=conecta.conn.prepareStatement("update fichadepaciente set NOME=?,TELEFONE=?,"
            + "CPF=?,CIDADE=?,BAIRRO=?,RUA=?,NUMERO=? where numeroDeInscricao=?");
            pst.setString(1,jTextFieldNome.getText());
            pst.setString(2,jTextFieldTelefone.getText());
            pst.setString(3,jTextFieldCPF.getText());
            pst.setString(4,jTextFieldCidade.getText());
            pst.setString(5,jTextFieldBairro.getText());
            pst.setString(6,jTextFieldRua.getText());
            pst.setString(7,jTextFieldNumero.getText());
            pst.setString(8,jTextFieldNumInscricao.getText());
            pst.executeUpdate();
            
            PreparedStatement pst2=conecta.conn.prepareStatement("update MARCACAODECONSULTAS set NOME=?,TELEFONE=?,"
            + "CPF=? where cpf=?");
            pst2.setString(1,jTextFieldNome.getText());
            pst2.setString(2,jTextFieldTelefone.getText());
            pst2.setString(3,jTextFieldCPF.getText());
            pst2.setString(4,jTextFieldCPF.getText());
            pst2.executeUpdate();
            
            PreparedStatement pst3=conecta.conn.prepareStatement("update relatoriomedico set NOME=?,TELEFONE=?,"
            + "CPF=? where cpf=?");
            pst3.setString(1,jTextFieldNome.getText());
            pst3.setString(2,jTextFieldTelefone.getText());
            pst3.setString(3,jTextFieldCPF.getText());
            pst3.setString(4,jTextFieldCPF.getText());
            pst3.executeUpdate();
            
            JOptionPane.showMessageDialog(rootPane, "Dados do paciente editado com sucesso!");
            EsvaziarCamposDeTexto();
            preencherTabelaPaciente();
            preencherTabelaConsulta();
            jButtonCadastrar.setEnabled(true);
            jButtonEditarPaciente.setEnabled(false);
            jButtonExcluir.setEnabled(false);
            jButtonConfirmar.setEnabled(false);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro ao editar\n Erro:"+ex);
            }   
        }
    }//GEN-LAST:event_jButtonEditarPacienteActionPerformed

    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
        // TODO add your handling code here:
        if((jComboBoxEspecialidade.getSelectedItem().equals("Todas as especialidades"))
           ||(jComboBoxProfissional.getSelectedItem().equals("Todas os profissionais"))
           ||(jDateChooser1.getDate()==null)){
            JOptionPane.showMessageDialog(rootPane, "Coloque opções de consulta válidas!");
        }
        else {
            try {
                //cadastrar na tabela de alunos
                PreparedStatement pst=conecta.conn.prepareStatement("insert into marcacaodeconsultas(NOME,TELEFONE,CPF,ESPECIALIDADE,PROFISSIONAL,DIA,HORARIO) "
                        + "Values(?,?,?,?,?,?,?)");
                pst.setString(1,jTextFieldNome.getText());
                pst.setString(2,jTextFieldTelefone.getText());
                pst.setString(3,jTextFieldCPF.getText());
                pst.setString(4, (String) jComboBoxEspecialidade.getSelectedItem());
                pst.setString(5, (String) jComboBoxProfissional.getSelectedItem());
                pst.setString(6, DateFormat.format(jDateChooser1.getDate()));
                pst.setString(7, DateFormatHorario.format(jSpinner1.getValue()));
                pst.executeUpdate();
                
                PreparedStatement pst2=conecta.conn.prepareStatement("insert into relatoriomedico(NOME,TELEFONE,CPF,ESPECIALIDADE,PROFISSIONAL,DIA,HORARIO) "
                        + "Values(?,?,?,?,?,?,?)");
                pst2.setString(1,jTextFieldNome.getText());
                pst2.setString(2,jTextFieldTelefone.getText());
                pst2.setString(3,jTextFieldCPF.getText());
                pst2.setString(4, (String) jComboBoxEspecialidade.getSelectedItem());
                pst2.setString(5, (String) jComboBoxProfissional.getSelectedItem());
                pst2.setString(6, DateFormat.format(jDateChooser1.getDate()));
                pst2.setString(7, DateFormatHorario.format(jSpinner1.getValue()));
                pst2.executeUpdate();
                
                JOptionPane.showMessageDialog(rootPane, "Consulta cadastrada com sucesso!");
                EsvaziarCamposDeTexto();
                preencherTabelaConsulta();
                jButtonCadastrar.setEnabled(true);
                jButtonEditarPaciente.setEnabled(false);
                jButtonExcluir.setEnabled(false);
                jButtonConfirmar.setEnabled(false);
            } catch (NullPointerException | SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro na inserção!\n Erro:"+ex);    
            }
        }
    }//GEN-LAST:event_jButtonConfirmarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // TODO add your handling code here:
        conecta.executaSQLExcluir("delete from fichadepaciente where CPF='"+jTextFieldCPF.getText()+"'");
        conecta.executaSQLExcluir("delete from marcacaodeconsultas where CPF='"+jTextFieldCPF.getText()+"'");
        conecta.executaSQLExcluir("delete from relatoriomedico where CPF='"+jTextFieldCPF.getText()+"'");
        JOptionPane.showMessageDialog(rootPane,"Pacienete excluido com sucesso! \n As consultas do paciente também foram excluídas");
            
        EsvaziarCamposDeTexto();
        jButtonCadastrar.setEnabled(true);
        jButtonEditarPaciente.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonConfirmar.setEnabled(false);
        preencherTabelaPaciente();
        preencherTabelaConsulta();
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jTablePacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePacientesMouseClicked
        // TODO add your handling code here:
        ModeloTabela ModeloTabela=new ModeloTabela(dados,Colunas);
        jTablePacientes.getModel();
        int index = jTablePacientes.getSelectedRow();
        java.util.Date data_inicio=null,data_nasc=null;
                
        String ORDEM=""+jTablePacientes.getValueAt(jTablePacientes.getSelectedRow(), 0);
        jTextFieldNumInscricao.setText(ORDEM);
        String NOME=""+jTablePacientes.getValueAt(jTablePacientes.getSelectedRow(), 1);
        jTextFieldNome.setText(NOME);
        String TELEFONE=""+jTablePacientes.getValueAt(jTablePacientes.getSelectedRow(), 2);
        jTextFieldTelefone.setText(TELEFONE);
        String CPF=""+jTablePacientes.getValueAt(jTablePacientes.getSelectedRow(), 3);
        jTextFieldCPF.setText(CPF);
        String CIDADE=""+jTablePacientes.getValueAt(jTablePacientes.getSelectedRow(), 4);
        jTextFieldCidade.setText(CIDADE);
        String bairro=""+jTablePacientes.getValueAt(jTablePacientes.getSelectedRow(), 5);
        jTextFieldBairro.setText(bairro);
        String RUA=""+jTablePacientes.getValueAt(jTablePacientes.getSelectedRow(), 6);
        jTextFieldRua.setText(RUA);
        String NUMERO=""+jTablePacientes.getValueAt(jTablePacientes.getSelectedRow(), 7);
        jTextFieldNumero.setText(NUMERO);
        jTextFieldNome.setEnabled(true);
        jTextFieldTelefone.setEnabled(true);
        jTextFieldCPF.setEnabled(true);
        jTextFieldCidade.setEnabled(true);
        jTextFieldBairro.setEnabled(true);
        jTextFieldRua.setEnabled(true);
        jTextFieldNumero.setEnabled(true);
        jButtonCadastrar.setEnabled(false);
        jButtonEditarPaciente.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        jComboBoxEspecialidade.setEnabled(true);
        jComboBoxProfissional.setEnabled(true);
        jButtonConfirmar.setEnabled(true);
        jButtonEditarConsulta.setEnabled(false);
        jButtonDesmarcar.setEnabled(false);
    }//GEN-LAST:event_jTablePacientesMouseClicked

    private void jTableConsultasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableConsultasMouseClicked
        // TODO add your handling code here:
        EsvaziarCamposDeTexto();
        ModeloTabela ModeloTabela=new ModeloTabela(dados,Colunas);
        jTableConsultas.getModel();
        int index = jTableConsultas.getSelectedRow();
        java.util.Date Dia=null,Horario=null;
                
        String ORDEM=""+jTableConsultas.getValueAt(jTableConsultas.getSelectedRow(), 0);
        jTextFieldOrdem.setText(ORDEM);
        String NOME=""+jTableConsultas.getValueAt(jTableConsultas.getSelectedRow(), 1);
        jTextFieldNome.setText(NOME);
        String TELEFONE=""+jTableConsultas.getValueAt(jTableConsultas.getSelectedRow(), 2);
        jTextFieldTelefone.setText(TELEFONE);
        String CPF=""+jTableConsultas.getValueAt(jTableConsultas.getSelectedRow(), 3);
        jTextFieldCPF.setText(CPF);
        String ESPECIALIDADE=""+jTableConsultas.getValueAt(jTableConsultas.getSelectedRow(), 4);
        jComboBoxEspecialidade.setSelectedItem(ESPECIALIDADE);
        String PROFISSIONAL=""+jTableConsultas.getValueAt(jTableConsultas.getSelectedRow(), 5);
        jComboBoxProfissional.setSelectedItem(PROFISSIONAL);
        try {
            Dia = new SimpleDateFormat("dd-MM-yyyy").parse((String)jTableConsultas.getValueAt(index, 6));
            Horario=new SimpleDateFormat("HH:mm").parse((String)jTableConsultas.getValueAt(index, 7));
        } catch (ParseException ex) { 
            Logger.getLogger(MarcacaoDeConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextFieldNome.setEnabled(false);
        jTextFieldCPF.setEnabled(false);
        jTextFieldTelefone.setEnabled(false);
        jTextFieldCidade.setEnabled(false);
        jTextFieldBairro.setEnabled(false);
        jTextFieldRua.setEnabled(false);
        jTextFieldNumero.setEnabled(false);
        
        jSpinner1.setValue(Horario);
        jDateChooser1.setDate(Dia);
        jButtonCadastrar.setEnabled(false);
        jButtonEditarPaciente.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonConfirmar.setEnabled(false);
        jButtonDesmarcar.setEnabled(true);
        jButtonEditarConsulta.setEnabled(true);
    }//GEN-LAST:event_jTableConsultasMouseClicked

    private void jButtonEditarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarConsultaActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat DateFormat = new SimpleDateFormat("dd-MM-yyyy");
        if((jComboBoxEspecialidade.getSelectedItem().equals("Todas as especialidades"))
           ||(jComboBoxProfissional.getSelectedItem().equals("Todas os profissionais"))
           ||(jDateChooser1.getDate()==null)){
            JOptionPane.showMessageDialog(rootPane, "Coloque opções de consulta válidas!");
        }
        else{    
            try {
            PreparedStatement pst=conecta.conn.prepareStatement("update marcacaodeconsultas set ESPECIALIDADE=?,PROFISSIONAL=?,"
                    + "DIA=?,HORARIO=? where ORDEM=?");
            pst.setString(1, (String) jComboBoxEspecialidade.getSelectedItem());
            pst.setString(2, (String) jComboBoxProfissional.getSelectedItem());
            pst.setString(3, DateFormat.format(jDateChooser1.getDate()));
            pst.setString(4, DateFormatHorario.format(jSpinner1.getValue()));
            pst.setString(5,jTextFieldOrdem.getText());
            pst.executeUpdate();
            
            PreparedStatement pst2=conecta.conn.prepareStatement("update relatoriomedico set ESPECIALIDADE=?,PROFISSIONAL=?,"
                    + "DIA=?,HORARIO=? where ORDEM=?");
            pst2.setString(1, (String) jComboBoxEspecialidade.getSelectedItem());
            pst2.setString(2, (String) jComboBoxProfissional.getSelectedItem());
            pst2.setString(3, DateFormat.format(jDateChooser1.getDate()));
            pst2.setString(4, DateFormatHorario.format(jSpinner1.getValue()));
            pst2.setString(5,jTextFieldOrdem.getText());
            pst2.executeUpdate();
            
            JOptionPane.showMessageDialog(rootPane, "Dados da consulta editada com sucesso!");
            EsvaziarCamposDeTexto();
            preencherTabelaConsulta();
            
            jTextFieldNome.setEnabled(true);
            jTextFieldCPF.setEnabled(true);
            jTextFieldTelefone.setEnabled(true);
            jTextFieldCidade.setEnabled(true);
            jTextFieldBairro.setEnabled(true);
            jTextFieldRua.setEnabled(true);
            jTextFieldNumero.setEnabled(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Erro ao editar\n Erro:"+ex);
            }   
        }
    }//GEN-LAST:event_jButtonEditarConsultaActionPerformed

    private void jButtonPesquisarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarPacienteActionPerformed
        // TODO add your handling code here:
        preencherTabelaPacientePesquisar();
    }//GEN-LAST:event_jButtonPesquisarPacienteActionPerformed
    public void EsvaziarCamposDeTexto(){
       jTextFieldNome.setText("");
       jTextFieldCPF.setText("");
       jTextFieldTelefone.setText("");
       jTextFieldCidade.setText("");
       jTextFieldRua.setText("");
       jTextFieldNumero.setText("");
       jTextFieldBairro.setText("");
    }
    public void preencherColunaPacientes(String SQL){
        ArrayList dados=new ArrayList();
        String[] Colunas=new String[]{"NºInscrição","NOME","TELEFONE","CPF","CIDADE","BAIRRO","RUA","NUMERO"};
        conecta.executaSQL(SQL);
        try {
            conecta.rs.first();
            do{
            dados.add(new Object[]{conecta.rs.getInt("numeroDeInscricao"),conecta.rs.getString("NOME"),conecta.rs.getString("TELEFONE"),
                conecta.rs.getString("CPF"),conecta.rs.getString("CIDADE"),conecta.rs.getString("BAIRRO"),
                conecta.rs.getString("RUA"),conecta.rs.getString("NUMERO")});
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher tabela ou tabela vazia!\n Erro:"+ex);
        }
        ModeloTabela ModeloTabela=new ModeloTabela(dados,Colunas);
        jTablePacientes.setModel(ModeloTabela);  
    }
    public void preencherColunaConsultas(String SQL){
        ArrayList dados=new ArrayList();
        String[]  Colunas=new String[]{"ORDEM","NOME","TELEFONE","CPF","ESPECIALIDADE","PROFISSIONAL","DIA","HORARIO"};
        conecta.executaSQL(SQL);
        try {
            conecta.rs.first();
            do{
            dados.add(new Object[]{conecta.rs.getInt("ORDEM"),conecta.rs.getString("NOME"),conecta.rs.getString("TELEFONE"),
                conecta.rs.getString("CPF"),conecta.rs.getString("ESPECIALIDADE"),conecta.rs.getString("PROFISSIONAL"),
                conecta.rs.getString("DIA"),conecta.rs.getString("HORARIO")});
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher tabela ou tabela vazia!\n Erro:"+ex);
        }
        ModeloTabela ModeloTabela=new ModeloTabela(dados,Colunas);
        jTableConsultas.setModel(ModeloTabela);  
    }
    public void preencherTabelaPaciente(){
        preencherColunaPacientes("select * from fichadepaciente order by NOME");           
    }
    public void preencherTabelaConsulta(){
        preencherColunaConsultas("select * from marcacaodeconsultas order by HORARIO");           
    }
    public void preencherJComboBoxEspecialidade(){
        conecta.conexao();
        conecta.executaSQL("select distinct ESPECIALIDADE from usuarioprofissional order by ESPECIALIDADE");
        try {
            conecta.rs.first();
            jComboBoxEspecialidade.removeAllItems();
            jComboBoxEspecialidade.addItem("Todas as especialidades");
            do{
                if(!conecta.rs.getString("ESPECIALIDADE").isEmpty()){
                    jComboBoxEspecialidade.addItem(conecta.rs.getString("ESPECIALIDADE"));
                }
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(rootPane,"Erro ao preencher JComboBox!\n Erro:"+ ex);
        }
    }
    public void preencherJComboBoxProfissional(){
        conecta.conexao();
        conecta.executaSQL("select distinct NOME from usuarioprofissional order by NOME");
        try {
            conecta.rs.first();
            jComboBoxProfissional.removeAllItems();
            jComboBoxProfissional.addItem("Todas os profissionais");
            do{
                if(!conecta.rs.getString("NOME").isEmpty()){
                    jComboBoxProfissional.addItem(conecta.rs.getString("NOME"));
                }
            }while(conecta.rs.next());
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(rootPane,"Erro ao preencher JComboBox!\n Erro:"+ ex);
        }
    }
    public void DefinirJSpinner(){
        jSpinner1.setModel(new SpinnerDateModel());
        jSpinner1.setEditor(new JSpinner.DateEditor(jSpinner1, "HH:mm"));
    }
    public void preencherTabelaPacientePesquisar(){
        preencherColunaPacientes("select * from fichadepaciente where NOME like'%"+jTextFieldNome.getText()+"%'");     
    }
    public void preencherTabelaConsultaPesquisar(){
        String date=(DateFormat.format(jDateChooser1.getDate()));
        preencherColunaConsultas("select * from relatoriomedico where ESPECIALIDADE like'%"+jComboBoxEspecialidade.getSelectedItem()+"%'"
                        + "and PROFISSIONAL like'%"+jComboBoxProfissional.getSelectedItem()+"%'"
                        + "and DIA like'%"+date+"%'"        
                        + "ORDER BY HORARIO");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarcacaoDeConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarcacaoDeConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarcacaoDeConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarcacaoDeConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarcacaoDeConsultas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCadastrar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JButton jButtonDesmarcar;
    private javax.swing.JButton jButtonEditarConsulta;
    private javax.swing.JButton jButtonEditarPaciente;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonPesquisarConsulta;
    private javax.swing.JButton jButtonPesquisarPaciente;
    private javax.swing.JComboBox<String> jComboBoxEspecialidade;
    private javax.swing.JComboBox<String> jComboBoxProfissional;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTableConsultas;
    private javax.swing.JTable jTablePacientes;
    private javax.swing.JTextField jTextFieldBairro;
    private javax.swing.JFormattedTextField jTextFieldCPF;
    private javax.swing.JTextField jTextFieldCidade;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldNumInscricao;
    private javax.swing.JTextField jTextFieldNumero;
    private javax.swing.JTextField jTextFieldOrdem;
    private javax.swing.JTextField jTextFieldRua;
    private javax.swing.JFormattedTextField jTextFieldTelefone;
    // End of variables declaration//GEN-END:variables
}
